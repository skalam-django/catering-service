"""
Django settings for catering_service project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

PRODUCTION = True

DEBUG = False

SERVICES = False

PRINT_EANABLED = True

TRACEBACK_OFF = False

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 1


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'auth_app',
    'src',
]

MIDDLEWARE = [
    'catering_service.middleware.CustomMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

X_FRAME_OPTIONS = 'SAMEORIGIN'

ROOT_URLCONF = 'catering_service.urls'

SSL = False

SESSION_EXPIRE_AT_BROWSER_CLOSE =  False


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'catering_service/template/templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
            'libraries' : {
                'nc_static'     : 'catering_service.template.templatetags',
                'nc_assets'     : 'catering_service.template.templatetags',
                'date_formater' : 'catering_service.template.templatetags',
            }
        },
    },
]

STATICFILES_DIRS = [ 
                        BASE_DIR / 'catering_service/static',
                        BASE_DIR / 'assets',
                    ]
              
STATIC_ROOT = 'static'                
STATIC_URL = '/static/'
STATIC_VERSION = 2.0

STATICFILES_FINDERS = (
                        'django.contrib.staticfiles.finders.FileSystemFinder',
                        'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)


# MEDIA_URL = '/media/'


WSGI_APPLICATION = 'catering_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = "auth_app.AuthUser"


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if DEBUG:
    import mimetypes
    mimetypes.add_type("application/javascript", ".js", True)


USER_TYPES = (
    ('admin', 'Admin'),
    ('employee', 'Employee'),
    ('vendor', 'Vendor'),
    ('customer', 'Customer'),
)

UNITS = (
            'unit',
            'metric ton', 
            'ton', 
            'kilogram', 
            'gram', 
            'milligram', 
            'gallon', 
            'cubic meter', 
            'cubic inch', 
            'cubic centimeter', 
            'liter', 
            'milliliter', 
            'kilometer', 
            'meter', 
            'centimeter', 
            'foot', 
            'inch', 
            'plate', 
            'packet', 
            'piece', 
            'dozen', 
            'pair', 
            'teaspoon', 
            'tablespoon', 
            'cup', 
            'container', 
            'dish', 
            'head',
        )

RUN_SERVER = MIGRATION_OPERATION_IN_PROGRESS = False
args = sys.argv[1:]
if args is not None and len(args)>0:
    if args[0] in ['makemigrations', 'migrate']:
        MIGRATION_OPERATION_IN_PROGRESS = True
    elif args[0] in ['runserver']:  
        RUN_SERVER = True


IS_MOBILE = False
